

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_ENV=production
    ports:
      - "3100:3100"
    environment:
      - NODE_ENV=production
      - PORT=3100
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3100/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nestjs-network

  # Development service (optional)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3101:3100"
    environment:
      - NODE_ENV=development
      - PORT=3100
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    profiles:
      - dev
    networks:
      - nestjs-network

networks:
  nestjs-network:
    driver: bridge 